<UserControl x:Class="WoWonderDesktop.Controls.ChatListControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:controls="clr-namespace:WoWonderDesktop.Controls"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:properties="clr-namespace:WoWonderDesktop.language"
             mc:Ignorable="d" MinWidth="340"
             x:Name="_Chats">
    <UserControl.Resources>
        

        <DataTemplate x:Key="ChatButtonItemTemplate">
            <RadioButton GroupName="ChatButton">
                <RadioButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="MinHeight" Value="70"/>
                        <Setter Property="Padding" Value="10"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Command" Value="{Binding DataContext.GetSelectedChatCommand, ElementName=_Chats, UpdateSourceTrigger=PropertyChanged}"/>
                        <Setter Property="CommandParameter" Value="{Binding}"/>
                        <Setter Property="Content" Value="{Binding Name}"/>

                        <!--to select the first chat.. it is optional. i dont prefer to check the chat automatically so i will comment it out for now-->
                        <!--<Setter Property="IsChecked" Value="{Binding ChatIsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>-->

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border 
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="0"
                                        VerticalAlignment="Center"
                                        Padding="{TemplateBinding Padding}"
                                        SnapsToDevicePixels="True"
                                        x:Name="border">
                                        <Grid>
                                            <Grid.Triggers>

                                                <!-- Mouse over shows time -->
                                                <EventTrigger >
                                                    <EventTrigger.RoutedEvent>MouseEnter</EventTrigger.RoutedEvent>
                                                    <BeginStoryboard>
                                                        <Storyboard Storyboard.TargetName="ExtraDetails" Storyboard.TargetProperty="Opacity">
                                                            <DoubleAnimation To="1" Duration="00:00:00.1" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>

                                                <!-- Mouse leave hides time -->
                                                <EventTrigger >
                                                    <EventTrigger.RoutedEvent>MouseLeave</EventTrigger.RoutedEvent>
                                                    <BeginStoryboard>
                                                        <Storyboard Storyboard.TargetName="ExtraDetails" Storyboard.TargetProperty="Opacity">
                                                            <DoubleAnimation To="0" Duration="00:00:00.1" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>

                                            </Grid.Triggers>

                                            <Grid.RowDefinitions>
                                                <!--Will Contain Name, photo, message, message time-->
                                                <RowDefinition Height="Auto"/>

                                                <!--Will contain options such as archive chat, pin chat, delete etc.-->
                                                <!--<RowDefinition Height="0"/>-->
                                            </Grid.RowDefinitions>

                                            <Border Grid.RowSpan="3"
                                                    x:Name="bdChild"
                                                    CornerRadius="10"
                                                    Margin="-10"
                                                    Background="Transparent"
                                                    HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Stretch"/>

                                            <!--#region Contact details-->
                                            <Grid Grid.Row="0">

                                                <Grid.ColumnDefinitions>
                                                    <!--Profile Photo-->
                                                    <ColumnDefinition Width="Auto"/>

                                                    <!--Contact Name & Message-->
                                                    <ColumnDefinition/>

                                                    <!--Last Message Time-->
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>

                                                <controls:RoundProfileButton x:Name="ImageProfileButton" Tag="{Binding UserId}" Tap="ImageProfileButton_OnTap" Grid.Row="0" Height="50" Width="50"
                                                                             ProfileImageSource="{Binding Avatar, Converter={StaticResource ImgConverter}, IsAsync=true,FallbackValue={StaticResource DefaultImageAvatar}, TargetNullValue={StaticResource DefaultImageAvatar}, UpdateSourceTrigger=PropertyChanged}"
                                                                             IsOnline="{Binding IsOnline}" />
                                                               
                                                <!--#region Contact Name & Message-->
                                                <Grid 
                                                    Grid.Column="1"
                                                    Margin="15,0,0,0">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition/>
                                                        <!--Name-->
                                                        <RowDefinition/>
                                                        <!--Message-->
                                                    </Grid.RowDefinitions>

                                                    <StackPanel Orientation="Horizontal" >
                                                        <!-- Name-->
                                                        <TextBlock 
                                                            Text="{Binding Name}"
                                                            FontSize="15">
                                                            <TextBlock.Style>
                                                                <Style TargetType="{x:Type TextBlock}">
                                                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                                                                            <Setter Property="FontFamily" Value="{StaticResource RobotoBold}"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                        <!-- icon verified-->
                                                        <materialDesign:PackIcon Kind="CheckboxMarkedCircle" Margin="5,0,0,5" Visibility="{Binding UVerified}" Foreground="#297CF9" VerticalAlignment="Center" HorizontalAlignment="Right"  FontSize="8"   />

                                                    </StackPanel>
                                                                
                                                    <TextBlock 
                                                        Grid.Row="1"
                                                        Text="{Binding LastMessageText, UpdateSourceTrigger=PropertyChanged}"
                                                        TextTrimming="CharacterEllipsis">
                                                        <TextBlock.Style>
                                                            <Style TargetType="{x:Type TextBlock}">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                                                                        <Setter Property="FontFamily" Value="{StaticResource RobotoBold}"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>  
                                                </Grid>
                                                <!--#endregion-->

                                                <!--Last Message Time-->
                                                <Grid Grid.Column="2">
                                                   
                                                    <StackPanel Orientation="Vertical" HorizontalAlignment="Right">

                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock 
                                                            Text="{Binding LastSeenTimeText, UpdateSourceTrigger=PropertyChanged}"
                                                            HorizontalAlignment="Right" />
                                                           
                                                            <!-- Drop Down Menu Chat containers -->
                                                            <StackPanel Name="ExtraDetails"
                                                                        Opacity="0"
                                                                        Margin="5,-5,0,0"
                                                                        Orientation="Horizontal"
                                                                        HorizontalAlignment="Right">

                                                                <materialDesign:PopupBox x:Name="DropDownMenuChat"  materialDesign:ShadowAssist.ShadowDepth="Depth0" HorizontalAlignment="Right" VerticalAlignment="Top" >
                                                                    <materialDesign:PopupBox.ToggleContent>
                                                                        <materialDesign:PackIcon Kind="DotsVertical" Width="21" Height="21" Foreground="#777777" />
                                                                    </materialDesign:PopupBox.ToggleContent>
                                                                    <ListBox MinWidth="150" ItemsSource="{Binding MenuChatItems}"  SelectionMode="Multiple" MouseMove="DropDownMenuChat_OnMouseMove" SelectionChanged="DropDownMenuChat_OnSelectionChanged" />
                                                                </materialDesign:PopupBox>

                                                            </StackPanel>

                                                        </StackPanel>

                                                        <Border
                                                            Background="{StaticResource WownderDefaultBrush}"
                                                            Opacity=".7"
                                                            BorderThickness="1"
                                                            CornerRadius="0"
                                                            Height="25"
                                                            Width="25"
                                                            Visibility="{Binding MessageCountVisibility}"
                                                            HorizontalAlignment="Right" 
                                                            Margin="0,8,0,0">

                                                            <Label  
                                                                x:Name="SendMsgButton"
                                                                Foreground="White"
                                                                Content="{Binding MessageCount}"
                                                                VerticalAlignment="Center"
                                                                HorizontalAlignment="Center" />

                                                        </Border>

                                                    </StackPanel>
                                                </Grid>
                                            </Grid>

                                            <!--#endregion-->

                                            <!--#region Options-->

                                            <!--Height is 0 because we are going to show it on Chat Button checked event only-->
                                            <!--<Grid 
                                                x:Name="OptionsGrid"
                                                Grid.Row="1"
                                                Height="0">
                                                <StackPanel>
                                                    <Separator Margin="0,10,0,0"/>

                                                    --><!--Option Buttons--><!--
                                                    <UniformGrid 
                                                    Grid.Column="1" 
                                                    Margin="0,10,0,0"
                                                    Columns="4">

                                                        --><!--Pin/Unpin Chat Button--><!--
                                                        <Button
                                                        CommandParameter="{Binding}">

                                                            --><!--To show UnPin icon and Command to unpin when the chat is pinned--><!--
                                                            <Button.Style>
                                                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource IconButtonStyle}">
                                                                    --><!--Normal Unpinned Chat Style--><!--
                                                                    <Setter Property="Content" Value="{StaticResource pinned}"/>
                                                                    <Setter Property="Command" Value="{Binding DataContext.PinChatCommand, ElementName=_Chats}"/>

                                                                    --><!--Style when Chat is pinned--><!--
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding IsPin}" Value="True">
                                                                            <Setter Property="Content" Value="{StaticResource unpin}"/>
                                                                            <Setter Property="Command" Value="{Binding DataContext.UnPinChatCommand, ElementName=_Chats}"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Button.Style>
                                                        </Button>
 
                                                        --><!--Archive / Un Archive Chat Button--><!--
                                                        <Button
                                                        CommandParameter="{Binding}">

                                                            --><!--To show UnArchive icon and Command to unarchive when the chat is pinned or unpinned--><!--
                                                            <Button.Style>
                                                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource IconButtonStyle}">
                                                                    --><!--Normal Chat Style--><!--
                                                                    <Setter Property="Content" Value="{StaticResource archive}"/>
                                                                    <Setter Property="Command" Value="{Binding DataContext.ArchiveChatCommand, ElementName=_Chats}"/>

                                                                    --><!--Style when Chat is pinned--><!--
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding IsArchive}" Value="True">
                                                                            <Setter Property="Content" Value="{StaticResource unarchive}"/>
                                                                            <Setter Property="Command" Value="{Binding DataContext.UnArchiveChatCommand, ElementName=_Chats}"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Button.Style>
                                                        </Button>
 
                                                        --><!--mute / Un mute Chat Button--><!--
                                                        <Button 
                                                        Content="{StaticResource mute}" 
                                                        Style="{StaticResource IconButtonStyle}"/>
  
                                                        --><!--delete Chat Button--><!--
                                                        <Button
                                                            Content="{StaticResource trash}"
                                                            Style="{StaticResource IconButtonStyle}"
                                                            Click="ButtonDeleteChat_OnClick"/>
                                                    </UniformGrid>
                                                </StackPanel>
                                            </Grid>-->
                                            <!--#endregion-->
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard SpeedRatio="5">
                                                        <!--<DoubleAnimation Storyboard.TargetName="OptionsGrid" Storyboard.TargetProperty="Height" To="50"/>-->
                                                        <ColorAnimation Storyboard.TargetProperty="(Background).Color" From="Transparent" To="{StaticResource DefaulColorTrans}"/>
                                                        <ColorAnimation Storyboard.TargetProperty="(Foreground).Color" From="Black" To="White"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard SpeedRatio="5">
                                                        <!--<DoubleAnimation Storyboard.TargetName="OptionsGrid" Storyboard.TargetProperty="Height" To="0"/>-->
                                                        <ColorAnimation Storyboard.TargetProperty="(Background).Color" From="{StaticResource DefaulColorTrans}" To="Transparent"/>
                                                        <ColorAnimation Storyboard.TargetProperty="(Foreground).Color" From="White" To="Black"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                        <!--<Trigger Property="IsMouseOver" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard SpeedRatio="5">
                                                        <ColorAnimation Storyboard.TargetName="bdChild" Storyboard.TargetProperty="(Background).Color" From="Transparent" To="#f3f3f3"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard SpeedRatio="5">
                                                        <ColorAnimation Storyboard.TargetName="bdChild" Storyboard.TargetProperty="(Background).Color" From="#f3f3f3" To="Transparent"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>-->
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </RadioButton.Style>
            </RadioButton>
        </DataTemplate>

        <Style x:Key="ArchiveButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Visibility" Value="Visible"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border 
                            Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <!--Back Icon-->
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid
                                    Grid.ColumnSpan="2"
                                    x:Name="bg"
                                    Opacity=".6"/>
                                <Path
                                    Data="{Binding Content, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type RadioButton}}}"
                                    Fill="Black"
                                    Margin="20,0" 
                                    HorizontalAlignment="Left"
                                    Style="{StaticResource {x:Type Path}}"/>
                                <TextBlock
                                    Grid.ColumnSpan="2"
                                    FontWeight="SemiBold"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                    <Run Text="{x:Static properties:LocalResources.label5_Archived}"/>
                                    <Run Text=" ("/>
                                    <!--Archived Chats Count-->
                                    <Run Text="{Binding DataContext.ArchivedChats.Count, Mode=OneWay, ElementName=_Chats}"/>
                                    <Run Text=")"/>
                                </TextBlock>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--if there is no chats archived than hide button-->
                            <DataTrigger Binding="{Binding DataContext.ArchivedChats.Count, ElementName=_Chats}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bg" Property="Background" Value="#f3f3f3"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="bg" Property="Background" Value="#f3f3f3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Animation on chat item add-->
        <ItemsPanelTemplate x:Key="dtitemPanel">
            <StackPanel>
                <b:Interaction.Behaviors>
                    <b:FluidMoveBehavior AppliesTo="Children" Duration="00:00:00.25"/>
                </b:Interaction.Behaviors>
            </StackPanel>
        </ItemsPanelTemplate>
    </UserControl.Resources>

    <ScrollViewer HorizontalScrollBarVisibility="Disabled" >
        <Grid>
            <Grid>

                <!--We need to hide this grid when archived chat is open-->
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Visibility, ElementName=ArchivePanel}" Value="Visible">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition />
                    <RowDefinition />
                    <!--Archived Chats-->
                </Grid.RowDefinitions>
                <!--Pinned / Unpinned Chat List-->
                <StackPanel>
                    <!--Hide Pinned Chat Panel if No chats are pinned-->
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding FilteredPinnedChats.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <!--Title--> 
                    <!--Pinned Chats-->
                    <StackPanel Orientation="Horizontal" Margin="15,0,0,0">
                        <Path Fill="DimGray" Data="{StaticResource pinned}" />
                        <TextBlock Margin="10,0" FontSize="13" Foreground="DimGray" Text="{x:Static properties:LocalResources.lable5_Pinned}" FontFamily="{StaticResource RobotoBold}" FontWeight="SemiBold" VerticalAlignment="Center"/>
                    </StackPanel>

                    <!--ChatList-->
                    <!--Since we want to show filtered chats on search-->
                    <ItemsControl ItemsSource="{Binding FilteredPinnedChats}" ItemTemplate="{StaticResource ChatButtonItemTemplate}"  ItemsPanel="{StaticResource  dtitemPanel}" Padding="0,15,0,15" />
                </StackPanel>
                <StackPanel Grid.Row="1">
                    <!--All Chats-->
                    <StackPanel Orientation="Horizontal" Margin="15,0,0,0">
                        <Path Fill="DimGray" Data="{StaticResource allchats}"/>
                        <TextBlock Margin="10,0" FontSize="13" Foreground="DimGray" Text="{x:Static properties:LocalResources.label5_Conversations}" FontFamily="{StaticResource RobotoBold}" FontWeight="SemiBold" VerticalAlignment="Center"/>
                    </StackPanel>

                    <!--ChatList-->
                    <!--Since we want to show filtered chats on search-->
                    <ItemsControl 
                        ItemsSource="{Binding FilteredChats}"
                        ItemTemplate="{StaticResource ChatButtonItemTemplate}"
                        ItemsPanel="{StaticResource  dtitemPanel}"
                        Padding="0,15,0,15" />

                    <RadioButton 
                    x:Name="btnOpenArchive" 
                    GroupName="Archive" 
                    Foreground="DimGray"
                    Style="{StaticResource ArchiveButtonStyle}"/>
                </StackPanel>
 
            </Grid>
 
            <!--Archive Chats-->
            <StackPanel
                x:Name="ArchivePanel">
                <StackPanel.Style>
                    <Style TargetType="{x:Type StackPanel}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked, ElementName=btnOpenArchive}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsChecked, ElementName=btnCloseArchive}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Visibility, ElementName=btnCloseArchive}" Value="Collapsed">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <RadioButton
                    Content="{StaticResource back}"
                    x:Name="btnCloseArchive"
                    GroupName="Archive" 
                    IsChecked="True"
                    Margin="0,15"
                    Style="{StaticResource ArchiveButtonStyle}"/>

                <ItemsControl
                    Background="Transparent"
                    BorderThickness="0"
                    ItemsSource="{Binding ArchivedChats}"
                    ItemsPanel="{StaticResource  dtitemPanel}"
                    ItemTemplate="{StaticResource ChatButtonItemTemplate}"/>
            </StackPanel>
        </Grid>
    </ScrollViewer>
</UserControl>