<Application x:Class="WoWonderDesktop.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:circularProgressBar="clr-namespace:MaterialDesignThemes.Wpf.Converters.CircularProgressBar;assembly=MaterialDesignThemes.Wpf"
             xmlns:library="clr-namespace:WoWonderDesktop.Library">
    <Application.Resources>
        <ResourceDictionary>
             
            <ResourceDictionary.MergedDictionaries>
                <!-- Order is important -->
                <ResourceDictionary Source="Styles/Colors.xaml" />
                <ResourceDictionary Source="Styles/Buttons.xaml" />
                <ResourceDictionary Source="Styles/Fonts.xaml" />
                <ResourceDictionary Source="Styles/Texts.xaml" />
                <ResourceDictionary Source="Styles/Windows.xaml" />
                <ResourceDictionary Source="Styles/TabControl.xaml" />
                <ResourceDictionary Source="Styles/ListBoxView.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.red.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.red.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Card.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Flipper.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Popupbox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />

                <ResourceDictionary Source="Styles/Cards.xaml" />

                <ResourceDictionary Source="Styles/MaterialColors.xaml" />

                <ResourceDictionary Source="Styles/Icons.xaml"/>

            </ResourceDictionary.MergedDictionaries>

            <!--<Image x:Key="NormalSmile" Source="Images\Emoji_Icons\Smile.png"/>
            <Image x:Key="Laughing Emoji" Source="Images\Emoji_Icons\Laughing Emoji.png"/>
            <Image x:Key="Happy Face Emoji" Source="Images\Emoji_Icons\Happy Face Emoji.png"/>-->

            <BitmapImage x:Key="DefaultImageAvatar" UriSource="Images/no_profile_image_circle.png"/>
            <BitmapImage x:Key="DefaultImageCover" UriSource="Images/Cover_image.png"/>
            <BitmapImage x:Key="DefaultImageGrey" UriSource="Images/ImagePlacholder_circle_grey.png"/>
            <BitmapImage x:Key="DefaultImagePlacholder" UriSource="Images/ImagePlacholder.png"/>

            <library:ColorToBrushConverter x:Key="ColorToBrushConverter2" />

            <library:ImgConverter x:Key="ImgConverter" />

            <Style x:Key="MaterialDesignCircularProgressBar2" TargetType="{x:Type ProgressBar}">
                <Setter Property="Foreground" Value="{StaticResource WownderDefaultBrush}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Width" Value="20" />
                <Setter Property="Height" Value="20" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ProgressBar}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="IsIndeterminateStoryboard" TargetName="RotateTransform" TargetProperty="Angle" RepeatBehavior="Forever">
                                    <DoubleAnimation From="0" To="359" Duration="0:0:2" />
                                </Storyboard>
                                <Storyboard x:Key="IsFullyIndeterminateStoryboard">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FullyIndeterminateGridScaleTransform" Storyboard.TargetProperty="ScaleX" RepeatBehavior="Forever">
                                        <SplineDoubleKeyFrame KeyTime="0" Value="0.0" />
                                        <SplineDoubleKeyFrame KeyTime="0:0:1" Value="1.0" />
                                        <SplineDoubleKeyFrame KeyTime="0:0:4" Value="0.0" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimation Storyboard.TargetName="RotateTransform" Storyboard.TargetProperty="Angle" RepeatBehavior="Forever" From="00" To="359" Duration="0:0:1.25" />
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid x:Name="TemplateRoot" ClipToBounds="False">
                                <Grid x:Name="FullyIndeterminateGrid">
                                    <Grid.RenderTransform>
                                        <ScaleTransform x:Name="FullyIndeterminateGridScaleTransform" ScaleX="0" />
                                    </Grid.RenderTransform>
                                </Grid>
                                <Grid x:Name="PathGrid" Margin="2" />
                                <Canvas>
                                    <Ellipse Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" />
                                    <Path x:Name="Path" Stroke="{TemplateBinding Foreground}" StrokeThickness="3" Canvas.Top="2" Canvas.Left="2" Fill="Transparent" RenderTransformOrigin="0, 0">
                                        <Path.Data>
                                            <PathGeometry>
                                                <PathFigure StartPoint="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource StartPointConverter}, Mode=OneWay}">
                                                    <ArcSegment Size="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource ArcSizeConverter}, Mode=OneWay}" SweepDirection="Clockwise">
                                                        <ArcSegment.Point>
                                                            <MultiBinding 
                                                        Converter="{StaticResource ArcEndPointConverter}" 
                                                        ConverterParameter="{x:Static circularProgressBar:ArcEndPointConverter.ParameterMidPoint}">
                                                                <Binding ElementName="PathGrid" Path="ActualWidth" />
                                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Value" />
                                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Minimum" />
                                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Maximum" />
                                                                <Binding ElementName="FullyIndeterminateGridScaleTransform" Path="ScaleX" />
                                                            </MultiBinding>
                                                        </ArcSegment.Point>
                                                    </ArcSegment>
                                                    <ArcSegment Size="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource ArcSizeConverter}, Mode=OneWay}" SweepDirection="Clockwise">
                                                        <ArcSegment.Point>
                                                            <MultiBinding Converter="{StaticResource ArcEndPointConverter}">
                                                                <Binding ElementName="PathGrid" Path="ActualWidth" />
                                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Value" />
                                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Minimum" />
                                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Maximum" />
                                                                <Binding ElementName="FullyIndeterminateGridScaleTransform" Path="ScaleX" />
                                                            </MultiBinding>
                                                        </ArcSegment.Point>
                                                    </ArcSegment>
                                                </PathFigure>
                                            </PathGeometry>
                                        </Path.Data>
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <RotateTransform x:Name="RotateTransform" 
                                                         CenterX="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource RotateTransformCentreConverter}, Mode=OneWay}" 
                                                         CenterY="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource RotateTransformCentreConverter}, Mode=OneWay}" />
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Canvas>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsIndeterminate, RelativeSource={RelativeSource Self}}" Value="True" />
                                        <Condition Binding="{Binding IsVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                                        <Condition Binding="{Binding Value, RelativeSource={RelativeSource Self}, Converter={StaticResource NotZeroConverter}}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource IsIndeterminateStoryboard}" Name="IsIndeterminateStoryboard"/>
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <RemoveStoryboard BeginStoryboardName="IsIndeterminateStoryboard" />
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsIndeterminate" Value="True" />
                                        <Condition Property="IsVisible" Value="True" />
                                        <Condition Property="Value" Value="0" />
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource IsFullyIndeterminateStoryboard}" Name="IsFullyIndeterminateStoryboard"/>
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.ExitActions>
                                        <RemoveStoryboard BeginStoryboardName="IsFullyIndeterminateStoryboard" />
                                    </MultiTrigger.ExitActions>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--Cleaner ;)-->

            <!--#region Animation Story Boards-->
            <!--Mouse Enter Animation-->
            <Storyboard x:Key="MouseEnterAnimation" SpeedRatio="5">
                <DoubleAnimation Storyboard.TargetProperty="Height" To="20"/>
                <DoubleAnimation Storyboard.TargetProperty="Width" To="20"/>
            </Storyboard>
            <!--Mouse Leave Animation-->
            <Storyboard x:Key="MouseLeaveAnimation" SpeedRatio="5">
                <DoubleAnimation Storyboard.TargetProperty="Height" To="18"/>
                <DoubleAnimation Storyboard.TargetProperty="Width" To="18"/>
            </Storyboard>
            <!--#endregion-->

            <!--Default Style for Path's-->
            <Style TargetType="{x:Type Path}">
                <Setter Property="Height" Value="18"/>
                <Setter Property="Width" Value="18"/>
                <Setter Property="Stretch" Value="Uniform"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Fill" Value="Black"/>

                <!--Path Animations-->
                <Style.Triggers>

                    <!--Animation for icon in Buttons-->
                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" Value="True">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard Storyboard="{StaticResource MouseEnterAnimation}"/>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <BeginStoryboard Storyboard="{StaticResource MouseLeaveAnimation}"/>
                        </DataTrigger.ExitActions>
                    </DataTrigger>
                    <!--Animation for icon in Toggle Buttons-->
                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard Storyboard="{StaticResource MouseEnterAnimation}"/>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <BeginStoryboard Storyboard="{StaticResource MouseLeaveAnimation}"/>
                        </DataTrigger.ExitActions>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
      
            <!--Style for buttons with Icon-->
            <Style x:Key="IconButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="Width" Value="30"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border 
                                Background="{TemplateBinding Background}">
                                <Path
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Data="{TemplateBinding Content}"
                                    Fill="{TemplateBinding Foreground}"
                                    Style="{StaticResource {x:Type Path}}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ToggleIconButtonStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Height" Value="50"/>
                <Setter Property="Width" Value="50"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border 
                                Background="{TemplateBinding Background}">
                                <Path
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Data="{TemplateBinding Content}"
                                    Fill="{TemplateBinding Foreground}"
                                    Style="{StaticResource {x:Type Path}}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!--Styling Scroll Bar-->
            <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid x:Name="Grid">
                                <Rectangle 
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Width="Auto"
                                    Height="Auto"
                                    Fill="Transparent"/>
                                <Border
                                    x:Name="Rectangle1"
                                    CornerRadius="5"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Width="Auto"
                                    Height="Auto"
                                    Background="{TemplateBinding Background}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Tag" Value="Horizontal">
                                    <Setter TargetName="Rectangle1" Property="Width" Value="Auto"/>
                                    <Setter TargetName="Rectangle1" Property="Height" Value="7"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Foreground" Value="LightGray"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Width" Value="10"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid 
                                x:Name="GridRoot" 
                                Width="8"
                                Background="{TemplateBinding Background}">

                                <!--Scroll Track-->
                                <Track 
                                    x:Name="PART_Track"
                                    Grid.Row="0"
                                    IsDirectionReversed="True"
                                    Focusable="False">
                                    <Track.Thumb>
                                        <Thumb 
                                            x:Name="Thumb"
                                            Background="{TemplateBinding Foreground}"
                                            Style="{DynamicResource ScrollThumbs}"/>
                                    </Track.Thumb>

                                    <!--Scroll Up on Page Up key press-->
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton
                                            x:Name="PageUp" 
                                            Command="ScrollBar.PageUpCommand"
                                            Opacity="0"
                                            Focusable="False"/>
                                    </Track.IncreaseRepeatButton>

                                    <!--Scroll Down on Page Down key press-->
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton
                                            x:Name="PageDown" 
                                            Command="ScrollBar.PageDownCommand"
                                            Opacity="0"
                                            Focusable="False"/>
                                    </Track.DecreaseRepeatButton>
                                </Track>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Thumb" 
                                            Property="Visibility"
                                            Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="Orientation" Value="Horizontal">
                                    <Setter TargetName="GridRoot" 
                                            Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_Track" 
                                            Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="Height" Value="12"/>
                                    <Setter TargetName="Thumb" Property="Tag" Value="Horizontal"/>
                                    <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageLeftCommand"/>
                                    <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
                       
        </ResourceDictionary>   
    </Application.Resources>
</Application>